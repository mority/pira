# File: .gitlab-ci.yml
# License: Part of the PIRA proect. Licensed under BSD 3 clause license. See LICENSE.txt file at https://github.com/jplehr/pira/LICENSE.txt
# Description: File to configure our Gitlab CI

# Stages
stages:
  - build
  - test
  - install

.lb-setup: &lb-setup
  - eval $(ssh-agent -s)
  - ssh-add ~/.ssh/gitlab_rsa
  - module use /home/groups/sc/modules/modulefiles
  - module load gcc/8 git clang/9.0 cmake python/3

.lb-tear-down: &lb-tear-down
  - echo $SSH_AUTH_SOCK
  - rm -rf $(dirname $(echo $SSH_AUTH_SOCK))
  - ssh-agent -k

run-build:
  stage: build
  tags:
    - general
  before_script: *lb-setup
  variables:
    GIT_STRATEGY: fetch
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_SHA
  script:
    - mkdir build && cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/tmp/llvm-instrumenter-install ..
    - make -j $(cat /proc/cpuinfo | grep processor | wc -l)
    - echo $PWD
    - *lb-tear-down

run-test:
  stage: test
  tags:
    - general
  before_script: *lb-setup
  variables:
    GIT_STRATEGY: none
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_SHA
  script:
    - ls
    - cd test
    - $HOME/all_repos/gh-llvm-llvm-project/llvm/utils/lit/lit.py -v .
    - *lb-tear-down

run-install:
  stage: install
  tags:
    - general
  before_script: *lb-setup
  variables:
    GIT_STRATEGY: none
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_SHA
  script:
    - echo $PWD
    - cd build
    - ls
    - make install
    - stat /tmp/llvm-instrumenter-install/lib/instrumentationlib.so
    - numlines=$(opt --load=/tmp/llvm-instrumentation-install/lib/instrumentationlib.so --filter-list 2>&1 | wc -l) && if [ $numlines -eq 1 ]; then exit 0; else exit 1; fi
    - rm -r /tmp/llvm-instrumenter-*
    - *lb-tear-down


